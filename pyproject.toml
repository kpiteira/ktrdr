[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "KTRDR"
version = "1.0.7.2"
description = "Advanced trading system with fuzzy logic and machine learning capabilities"
readme = "README.md"
requires-python = ">=3.12,<3.14"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "plotly>=5.13.0",
    "streamlit>=1.22.0",
    "torch>=2.7.1",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "ib_insync>=0.9.85",
    "pandas-ta>=0.3.14b0",
    "pyyaml>=6.0",
    "scikit-learn>=1.6.1",
    "tabulate>=0.9.0",
    "python-dotenv>=1.1.0",
    "tomli>=2.2.1",
    "rich>=14.0.0",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.3",
    "httpx>=0.28.1",
    "tomli-w>=1.2.0",
    "openai>=1.93.0",
    "anthropic>=0.57.1",
    "langchain>=0.3.26",
    "langchain-openai>=0.3.27",
    "redis>=6.2.0",
    "aiohttp>=3.12.14",
    "pydantic-settings>=2.10.1",
    "psutil>=7.0.0",
    "requests>=2.32.4",
    "pillow>=11.3.0",
    "starlette>=0.47.2",
    "urllib3>=2.5.0",
    "python-multipart>=0.0.18",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "psutil>=5.9.0",
]

[project.scripts]
ktrdr = "ktrdr.cli:app"

[dependency-groups]
dev = [
    "asyncpg>=0.30.0",
    "bandit[toml]>=1.8.6",
    "black>=25.1.0",
    "httpx>=0.28.1",
    "mypy>=1.16.0",
    "pandas-stubs>=2.2.2.240807",
    "pip-audit>=2.9.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.10",
    "scikit-learn-stubs>=0.0.3",
    "types-pillow>=10.2.0.20240822",
    "types-psutil>=7.0.0.20250601",
    "types-pyyaml>=6.0.12.20250822",
    "types-requests>=2.32.4.20250611",
    "types-tabulate>=0.9.0.20241207",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101"]  # allow assert statements in tests
# Pytest fixture protection - prevents ruff from removing imports that pytest needs
"tests/visualization/test_*.py" = ["F401"]  # allow fixture imports that appear unused
"tests/*/conftest.py" = ["F401"]  # allow fixture definitions that appear unused
"tests/**/test_*.py" = ["F811"]  # allow fixture redefinitions in test files

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # skip assert_used test

[tool.coverage.run]
source = ["ktrdr"]
omit = [
    "ktrdr/scripts/*",
    "tests/*",
    "ktrdr/dev/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
