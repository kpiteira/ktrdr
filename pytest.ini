# Pytest configuration file

[pytest]
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

markers =
    unit: Fast unit tests (<2s total, no external deps, comprehensive mocking)
    integration: Integration tests (<30s total, mocked external services)
    e2e: End-to-end tests (2-5min, full system with mocked externals)
    host_service: Tests requiring real host services (IB, training)
    manual: Manual/nightly tests only
    slow: Slow tests (>1min)
    coverage: Tests that contribute to coverage measurement
    asyncio: mark test as an asyncio coroutine
    api: mark a test as involving the API layer
    performance: mark tests that evaluate API performance metrics
    endpoints: mark tests that target specific API endpoints
    stress: mark tests as stress tests
    real_ib: mark tests as requiring real IB Gateway connection (not mocked)
    real_cli: mark tests as requiring real CLI execution with IB
    real_api: mark tests as requiring real API calls with IB
    real_pipeline: mark tests as requiring complete data pipeline with IB
    real_error_scenarios: mark tests as requiring real IB error conditions
    container_e2e: mark tests as requiring Docker containers for E2E testing
    exhaustive_resilience: mark tests as exhaustive resilience tests
    exhaustive_api_resilience: mark tests as exhaustive API resilience tests  
    exhaustive_cli_resilience: mark tests as exhaustive CLI resilience tests
    exhaustive_integration_resilience: mark tests as exhaustive integration resilience tests
    integration_slow: mark tests as slow integration tests (takes >60s)
    visualization: mark tests related to Python visualization module (deprecated, will be removed)

# Default: run only unit tests, excluding visualization tests (deprecated module)
addopts = -v --tb=short --cov=ktrdr --cov-report=term-missing --cov-report=html -m "not (slow or manual or host_service or visualization)" --ignore=tests/unit/visualization --ignore=tests/visualization --ignore=tests/integration/workflows/test_visualization_integration.py

# Configuration for pytest-asyncio
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

# Filter warnings from external libraries that we cannot control
filterwarnings =
    ignore::DeprecationWarning:eventkit.util:21
    # Suppress sklearn warnings during tests
    ignore::RuntimeWarning:sklearn.decomposition._base:148
    ignore::UserWarning:sklearn.preprocessing._data:2829
    # Suppress numpy/pydantic compatibility warnings
    ignore:In future, it will be an error for 'np.bool' scalars to be interpreted as an index:DeprecationWarning:pydantic.main:253
    # Suppress unittest async test warnings for legacy test files
    ignore:coroutine.*was never awaited:RuntimeWarning
    ignore:It is deprecated to return a value that is not None from a test case:DeprecationWarning