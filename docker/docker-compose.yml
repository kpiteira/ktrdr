services:
  # ⚠️  CRITICAL WARNING FOR MCP DEVELOPMENT ⚠️
  # NEVER BUILD, RESTART, OR TOUCH THE backend OR frontend CONTAINERS!
  # When working on MCP features, ONLY use commands that target the MCP container:
  #   ✅ docker-compose restart mcp
  #   ✅ docker-compose build mcp  
  #   ✅ docker-compose up -d mcp
  #   ❌ docker-compose --profile research up -d (rebuilds ALL containers)
  #   ❌ docker-compose build (rebuilds ALL containers)
  
  # FastAPI backend service - Development configuration
  backend:
    build:
      context: ..
      dockerfile: docker/backend/Dockerfile.dev
      # Cache from the previously built image for faster rebuilds
      cache_from:
        - ktrdr-backend:dev
    image: ktrdr-backend:dev
    container_name: ktrdr-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot-reloading
      - ../ktrdr:/app/ktrdr
      # Mount tests directory for running tests
      - ../tests:/app/tests
      # Mount data and logs directories for persistence
      - ../data:/app/data
      - ../logs:/app/logs
      # Mount config as read-only
      - ../config:/app/config:ro
      # Mount strategies directory
      - ../strategies:/app/strategies:ro
      # Mount models directory for trained models
      - ../models:/app/models
      # Mount output directory for visualization files
      - ../output:/app/output
      # Mount training analytics directory for detailed analytics exports
      - ../training_analytics:/app/training_analytics
      # Cache directories for pip and uv
      - pip-cache:/root/.cache/pip
      - uv-cache:/root/.cache/uv
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
      # IB Gateway configuration - testing bridge gateway IP
      - IB_HOST=172.17.0.1
      - IB_PORT=4002
      - IB_CLIENT_ID=1
      # IB Host Service configuration (Phase 0)
      # Set to true to enable host service mode, false for direct connection
      - USE_IB_HOST_SERVICE=${USE_IB_HOST_SERVICE:-false}
      - IB_HOST_SERVICE_URL=http://host.docker.internal:5001
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - ktrdr-network

  # Frontend React/TypeScript service - Development configuration
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
      # Cache from the previously built image for faster rebuilds
      cache_from:
        - ktrdr-frontend:dev
    image: ktrdr-frontend:dev
    container_name: ktrdr-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      # Mount source code for hot-reloading
      - ../frontend:/app
      # Prevent node_modules from being overwritten by host volume
      - /app/node_modules
      # Add npm cache volume for faster npm installs
      - npm-cache:/root/.npm
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://backend:8000/api/v1
      - VITE_DEBUG_MODE=true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
    networks:
      - ktrdr-network

  # MCP Server for Claude research integration - Optional research profile
  mcp:
    profiles: ["research"]
    build:
      context: ../mcp
      dockerfile: Dockerfile
      cache_from:
        - ktrdr-mcp:dev
    image: ktrdr-mcp:dev
    container_name: ktrdr-mcp
    restart: "no"  # MCP servers run on-demand when clients connect, not as persistent services
    volumes:
      # Read-only access to market data
      - ../data:/data:ro
      # Write access to research areas
      - ../strategies:/app/strategies:rw
      - ../models:/app/models:rw
      - mcp-experiments:/app/experiments:rw
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
      # API connection to backend via localhost (simple and reliable)
      - KTRDR_API_URL=http://localhost:8000/api/v1
      - EXPERIMENT_DB_PATH=/app/experiments/experiments.db
    # Removed depends_on to make MCP rebuilding completely independent
    # MCP will connect to backend via localhost when it starts
    network_mode: host  # Use host network to access localhost directly
    # Keep container alive for Claude to connect via: docker exec -i ktrdr-mcp python -m src.main
    command: tail -f /dev/null

networks:
  ktrdr-network:
    driver: bridge

volumes:
  pip-cache:
  uv-cache:
  npm-cache:
  mcp-experiments: