name: KTRDR CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - testing
          - production

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install -r requirements-dev.txt
      
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ktrdr/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 ktrdr/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
      
      - name: Check type hints with mypy
        run: |
          mypy ktrdr/
      
      - name: Check code style with black
        run: |
          black --check ktrdr/

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install -r requirements.txt
          uv pip install -r requirements-dev.txt
      
      - name: Run pytest with coverage
        run: |
          pytest tests/ --cov=ktrdr --cov-report=xml --cov-report=term
      
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install -r requirements.txt
          uv pip install -r requirements-dev.txt
      
      - name: Run integration tests
        run: |
          # Run only integration tests
          pytest tests/integration/ -v
      
      - name: Test CLI commands
        run: |
          # Basic CLI command tests
          python ktrdr_cli.py --help

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ktrdr:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test container
        run: |
          docker run --rm ktrdr:test python -c "import ktrdr; print(f'KTRDR version: {ktrdr.metadata.VERSION}')"
      
      - name: Check container health command
        run: |
          # Verify the HEALTHCHECK command works
          docker inspect ktrdr:test | grep -q "HEALTHCHECK"